#include "UrRobot.h"

UrRobot::UrRobot(MatrixXd mdh_table, Matrix<int, Dynamic, 1> type, VectorXd offset, Pose tool) :
	_mdh_table(mdh_table), _type(type), _offset(offset), _tool(tool)
{
	_nlinks = type.size();
	for (int idx = 0; idx<_nlinks; idx++)
	{
		double theta = mdh_table(idx, 0);
		double d = mdh_table(idx, 1);
		double a = mdh_table(idx, 2);
		double alpha = mdh_table(idx, 3);
		MDHLink tmp_link = MDHLink(theta, d, a, alpha, type(idx), offset(idx));
		_links.push_back(tmp_link);

		_qlimit.setZero(_nlinks, 2);
		if (_links[idx]._type == e_rotation)
			_qlimit.row(idx) << -2 * pi, 2 * pi;
		else
			_qlimit.row(idx) << -2, 2;
	}
	_hold_jpos = MatrixXd::Zero(6, 1);
}

void UrRobot::SetJntLimit(MatrixXd qlimit)
{
	_qlimit = qlimit;
}

Pose UrRobot::Transform(VectorXd q, int s_idx, int e_idx)
{
	Pose pose;
	pose.pos.setZero();
	pose.rot.setIdentity();
	for (int idx = s_idx; idx<e_idx; idx++)
	{
		RobotTools::Pose pose_link = _links[idx].Transform(q(idx));
		pose = RobotTools::PoseProduct(pose, pose_link);
	}

	return pose;
}

Pose UrRobot::FKSolve(VectorXd q)
{
	Pose res;
	res = Transform(q, 0, _nlinks);

	return res;
}
Pose UrRobot::FKSolveFast(VectorXd q)
{
	Pose res;
	double a3, a4, alpha1, alpha2, alpha3, alpha4, alpha5, alpha6, d1,d4, d5, d6, q1, q2, q3, q4, q5, q6,
		th1, th2, th3, th4, th5,th6;
	double z[37];
	a3 = _mdh_table(2, 2); a4 = _mdh_table(3, 2);
	d1 = _mdh_table(0, 1); d4 = _mdh_table(3, 1); d5 = _mdh_table(4, 1); d6 = _mdh_table(5, 1);
	alpha1 = _mdh_table(0, 3); alpha2 = _mdh_table(1, 3); alpha3 = _mdh_table(2, 3); alpha4 = _mdh_table(3, 3);
	alpha5 = _mdh_table(4, 3); alpha6 = _mdh_table(5, 3);
	th1 = _mdh_table(0, 0) + _offset(0); th2 = _mdh_table(1, 0) + _offset(1); th3 = _mdh_table(2, 0) + _offset(2); th4 = _mdh_table(3, 0) + _offset(3);
	th5 = _mdh_table(4, 0) + _offset(4); th6 = _mdh_table(5, 0) + _offset(5);
	q1 = q(0); q2 = q(1); q3 = q(2); q4 = q(3); q5 = q(4); q6 = q(5);

   z[1] = cos(q1+th1);
   z[2] = cos(q2+th2);
   z[3] = cos(q3+th3);
   z[4] = cos(q4+th4);
   z[5] = cos(q5+th5);
   z[6] = cos(q6+th6);
   z[7] = cos(alpha6);
   z[8] = sin(q5+th5);
   z[9] = sin(q6+th6);
   z[10] = sin(q4+th4);
   z[11] = sin(alpha5);
   z[12] = sin(alpha6);
   z[13] = cos(alpha5);
   z[14] = sin(q3+th3);
   z[15] = cos(alpha4);
   z[16] = sin(alpha4);
   z[17] = sin(q2+th2);
   z[18] = sin(alpha3);
   z[19] = cos(alpha3);
   z[20] = sin(q1+th1);
   z[21] = cos(alpha2);
   z[22] = sin(alpha2);
   z[23] = z[1]*(z[2]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*
       z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))+z[17]*(z[18]*(z[10]*
       z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) - z[20]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[
       9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-
       z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[21]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))));
   z[24] = z[20]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[22]*(z[14]*
       z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))+
       z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*
       z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[9]+
       z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*
       z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[21]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+
       z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*
       z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[
       9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*
       z[11])))) - z[1]*(z[2]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+
       z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-
       z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[
       7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*
       z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))));
   z[25] = z[1]*(z[2]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-
       z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(z[4]*z[
       8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*
       z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*
       z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) - z[20]*(z[17]*z[21]*(z[3]*(z[4]*z[8]*
       z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*
       z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*
       z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[
       7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*
       z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*
       z[12]*z[13]))-z[3]*z[18]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*
       z[13]-z[5]*z[11]*z[12]))));
   z[26] = z[1]*(z[2]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(
       d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*
       z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*
       z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*
       z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*
       z[13]-d6*z[5]*z[11]*z[12])))) - z[20]*(z[17]*z[21]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*
       z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+
       d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(a4+d6*
       z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*
       z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[3]*
       z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))));
   z[27] = cos(alpha1);
   z[28] = sin(alpha1);
   z[29] = z[20]*z[27]*(z[2]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*
       z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[
       5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) + z[1]*z[27]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[
       9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[21]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) - z[28]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[
       9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-
       z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))+z[21]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[22]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))));
   z[30] = z[28]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+z[21]*(z[14]*
       z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))+
       z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*
       z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[9]+
       z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*
       z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[22]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+
       z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*
       z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[
       9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*
       z[11])))) - z[20]*z[27]*(z[2]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[
       8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+
       z[17]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[
       6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+
       z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[
       5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[
       9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))) - z[1]*z[27]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*
       z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[
       6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[
       6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[
       9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*
       z[21]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[
       6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+
       z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[
       5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[
       9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))));
   z[31] = z[20]*z[27]*(z[2]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*
       z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))-z[17]*(z[14]*
       z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*
       z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*
       z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) + z[1]*z[27]*(z[17]*z[21]*(z[3]*(
       z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*
       z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(z[4]*z[8]*z[12]+
       z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*
       z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*
       z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*
       z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) - z[28]*(z[17]*z[22]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*
       z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[
       5]*z[11]*z[12])))+z[2]*z[22]*(z[14]*z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[
       4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*
       z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*
       z[12])))-z[21]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-
       z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*
       z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12]))));
   z[32] = z[20]*z[27]*(z[2]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-
       z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-
       d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*
       z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*
       z[13]-d6*z[5]*z[11]*z[12])))) + z[1]*z[27]*(z[17]*z[21]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*
       z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(
       a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[3]*
       z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))) - d1*z[28] - z[28]*(z[17]*z[22]*(a3+z[3]*(a4+d6*z[4]*z[8]*
       z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*
       z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[
       2]*z[22]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[
       4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+
       d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[21]*(z[19]*(z[4]*
       z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*
       z[7]*z[13]-d6*z[5]*z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))-z[3]*z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))));
   z[33] = z[20]*z[28]*(z[2]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*
       z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[
       5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) + z[27]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[
       9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-
       z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))+z[21]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[22]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) + z[1]*z[28]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[
       9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[21]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))));
   z[34] = -z[20]*z[28]*(z[2]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+
       z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-
       z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[
       7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*
       z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))) - z[27]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[
       6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11])))+z[21]*(z[14]*z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[
       8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*
       z[18]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*
       z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[22]*(z[18]*(z[10]*z[16]*(z[
       5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[
       9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11])))) - z[1]*z[28]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*
       z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[
       6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[
       7]*z[11])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[
       5]*z[6]*z[7]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*z[18]*(
       z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-
       z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[21]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+
       z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*
       z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11]))));
   z[35] = z[20]*z[28]*(z[2]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*
       z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))-z[17]*(z[14]*
       z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*
       z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*
       z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) + z[1]*z[28]*(z[17]*z[21]*(z[3]*(
       z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*
       z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(z[4]*z[8]*z[12]+
       z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*
       z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*
       z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*
       z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) + z[27]*(z[17]*z[22]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*
       z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[
       5]*z[11]*z[12])))+z[2]*z[22]*(z[14]*z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[
       4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*
       z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*
       z[12])))-z[21]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-
       z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*
       z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12]))));
   z[36] = d1*z[27] + z[20]*z[28]*(z[2]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*
       z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+
       z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*
       z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))) + z[1]*z[28]*(z[17]*z[21]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+
       z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(
       d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[2]*
       z[21]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*
       z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*
       z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*
       z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*
       z[7]*z[13]-d6*z[5]*z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))-z[3]*z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))) + z[27]*(z[17]*z[22]*(a3+z[3]*(a4+d6*z[
       4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*
       z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12])))+z[2]*z[22]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*
       z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*
       z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12])))-z[21]*(z[19]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*
       z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+
       z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[3]*z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*
       z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))));

	   res.rot << z[23], z[24], z[25], z[29], z[30], z[31], z[33], z[34], z[35];
	   res.pos << z[26], z[32], z[36];
	return res;
}

Pose UrRobot::FKSolveTool2(VectorXd q, MatrixXd DH, Pose tool)
{
	Pose res;
	double a3, a4, alpha1, alpha2, alpha3, alpha4, alpha5, alpha6, d1,d4, d5, d6, q1, q2, q3, q4, q5, q6,
		th1, th2, th3, th4, th5,th6;
	double z[37];
	a3 = DH(2, 2); a4 = DH(3, 2);
	d1 = DH(0, 1); d4 = DH(3, 1); d5 = DH(4, 1); d6 = DH(5, 1);
	alpha1 = DH(0, 3); alpha2 = DH(1, 3); alpha3 = DH(2, 3); alpha4 = DH(3, 3);alpha5 = DH(4, 3); alpha6 = DH(5, 3);
	th1 = DH(0, 0); th2 = DH(1, 0); th3 = DH(2, 0); th4 = DH(3, 0);th5 = DH(4, 0); th6 = DH(5, 0);
	q1 = q(0); q2 = q(1); q3 = q(2); q4 = q(3); q5 = q(4); q6 = q(5);

   z[1] = cos(q1+th1);
   z[2] = cos(q2+th2);
   z[3] = cos(q3+th3);
   z[4] = cos(q4+th4);
   z[5] = cos(q5+th5);
   z[6] = cos(q6+th6);
   z[7] = cos(alpha6);
   z[8] = sin(q5+th5);
   z[9] = sin(q6+th6);
   z[10] = sin(q4+th4);
   z[11] = sin(alpha5);
   z[12] = sin(alpha6);
   z[13] = cos(alpha5);
   z[14] = sin(q3+th3);
   z[15] = cos(alpha4);
   z[16] = sin(alpha4);
   z[17] = sin(q2+th2);
   z[18] = sin(alpha3);
   z[19] = cos(alpha3);
   z[20] = sin(q1+th1);
   z[21] = cos(alpha2);
   z[22] = sin(alpha2);
   z[23] = z[1]*(z[2]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*
       z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))+z[17]*(z[18]*(z[10]*
       z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) - z[20]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[
       9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-
       z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[21]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))));
   z[24] = z[20]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[22]*(z[14]*
       z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))+
       z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*
       z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[9]+
       z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*
       z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[21]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+
       z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*
       z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[
       9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*
       z[11])))) - z[1]*(z[2]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+
       z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-
       z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[
       7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*
       z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))));
   z[25] = z[1]*(z[2]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-
       z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(z[4]*z[
       8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*
       z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*
       z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) - z[20]*(z[17]*z[21]*(z[3]*(z[4]*z[8]*
       z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*
       z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*
       z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[
       7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*
       z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*
       z[12]*z[13]))-z[3]*z[18]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*
       z[13]-z[5]*z[11]*z[12]))));
   z[26] = z[1]*(z[2]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(
       d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*
       z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*
       z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*
       z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*
       z[13]-d6*z[5]*z[11]*z[12])))) - z[20]*(z[17]*z[21]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*
       z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+
       d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(a4+d6*
       z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*
       z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[3]*
       z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))));
   z[27] = cos(alpha1);
   z[28] = sin(alpha1);
   z[29] = z[20]*z[27]*(z[2]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*
       z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[
       5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) + z[1]*z[27]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[
       9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[21]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) - z[28]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[
       9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-
       z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))+z[21]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[22]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))));
   z[30] = z[28]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+z[21]*(z[14]*
       z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))+
       z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*
       z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[9]+
       z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*
       z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[22]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+
       z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*
       z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[
       9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*
       z[11])))) - z[20]*z[27]*(z[2]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[
       8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+
       z[17]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[
       6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+
       z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[
       5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[
       9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))) - z[1]*z[27]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*
       z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[
       6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[
       6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[
       9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*
       z[21]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[
       6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+
       z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[
       5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[
       9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))));
   z[31] = z[20]*z[27]*(z[2]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*
       z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))-z[17]*(z[14]*
       z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*
       z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*
       z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) + z[1]*z[27]*(z[17]*z[21]*(z[3]*(
       z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*
       z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(z[4]*z[8]*z[12]+
       z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*
       z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*
       z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*
       z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) - z[28]*(z[17]*z[22]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*
       z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[
       5]*z[11]*z[12])))+z[2]*z[22]*(z[14]*z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[
       4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*
       z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*
       z[12])))-z[21]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-
       z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*
       z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12]))));
   z[32] = z[20]*z[27]*(z[2]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-
       z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-
       d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*
       z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*
       z[13]-d6*z[5]*z[11]*z[12])))) + z[1]*z[27]*(z[17]*z[21]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*
       z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(
       a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[3]*
       z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))) - d1*z[28] - z[28]*(z[17]*z[22]*(a3+z[3]*(a4+d6*z[4]*z[8]*
       z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*
       z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[
       2]*z[22]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[
       4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+
       d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*
       z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[21]*(z[19]*(z[4]*
       z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*
       z[7]*z[13]-d6*z[5]*z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))-z[3]*z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))));
   z[33] = z[20]*z[28]*(z[2]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*
       z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[
       5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) + z[27]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[
       9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-
       z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))+z[21]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[22]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))) + z[1]*z[28]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[
       9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*
       z[13]-z[5]*z[7]*z[9]*z[13])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[10]*(z[9]*z[11]*
       z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[
       8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[
       9]*z[13]))+z[3]*z[18]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*
       z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13])))-z[2]*z[21]*(z[18]*(
       z[10]*z[16]*(z[5]*z[6]-z[7]*z[8]*z[9])+z[15]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*
       z[16]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[14]*z[19]*(z[4]*(z[5]*z[6]-z[7]*z[8]*z[9])+
       z[10]*(z[9]*z[11]*z[12]-z[6]*z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[6]-z[7]*z[
       8]*z[9])-z[16]*(z[6]*z[8]*z[11]+z[9]*z[12]*z[13]+z[5]*z[7]*z[9]*z[11])-z[4]*z[15]*(z[9]*z[11]*z[12]-z[6]*
       z[8]*z[13]-z[5]*z[7]*z[9]*z[13]))));
   z[34] = -z[20]*z[28]*(z[2]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*
       z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))+z[17]*(z[18]*(
       z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+
       z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-
       z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[
       7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*
       z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))) - z[27]*(z[17]*z[22]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[
       6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11])))+z[21]*(z[14]*z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[
       8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*
       z[18]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*
       z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[22]*(z[18]*(z[10]*z[16]*(z[
       5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[
       9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11])))) - z[1]*z[28]*(z[17]*z[21]*(z[3]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*
       z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[14]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[
       6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[
       7]*z[11])))-z[22]*(z[14]*z[18]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[
       5]*z[6]*z[7]*z[13]))+z[19]*(z[10]*z[16]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*
       z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))+z[3]*z[18]*(
       z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-
       z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11])))-z[2]*z[21]*(z[18]*(z[10]*z[16]*(z[5]*z[9]+
       z[6]*z[7]*z[8])+z[4]*z[16]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])+z[15]*(z[8]*z[9]*
       z[11]-z[6]*z[12]*z[13]-z[5]*z[6]*z[7]*z[11]))-z[14]*z[19]*(z[4]*(z[5]*z[9]+z[6]*z[7]*z[8])-z[10]*(z[6]*
       z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13]))-z[3]*z[19]*(z[10]*z[15]*(z[5]*z[9]+z[6]*z[7]*z[8])+z[4]*
       z[15]*(z[6]*z[11]*z[12]+z[8]*z[9]*z[13]-z[5]*z[6]*z[7]*z[13])-z[16]*(z[8]*z[9]*z[11]-z[6]*z[12]*z[13]-z[5]*
       z[6]*z[7]*z[11]))));
   z[35] = z[20]*z[28]*(z[2]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*
       z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))-z[17]*(z[14]*
       z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*
       z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*
       z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) + z[1]*z[28]*(z[17]*z[21]*(z[3]*(
       z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*
       z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[2]*z[21]*(z[14]*z[19]*(z[4]*z[8]*z[12]+
       z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*
       z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*
       z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*
       z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-
       z[16]*(z[7]*z[13]-z[5]*z[11]*z[12])))) + z[27]*(z[17]*z[22]*(z[3]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*
       z[12]*z[13]))-z[14]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[
       5]*z[11]*z[12])))+z[2]*z[22]*(z[14]*z[19]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))+z[18]*(z[
       4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-z[5]*z[11]*z[12]))+z[3]*
       z[19]*(z[8]*z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*
       z[12])))-z[21]*(z[19]*(z[4]*z[16]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[8]*z[10]*z[12]*z[16]-z[15]*(z[7]*z[13]-
       z[5]*z[11]*z[12]))-z[14]*z[18]*(z[4]*z[8]*z[12]+z[10]*(z[7]*z[11]+z[5]*z[12]*z[13]))-z[3]*z[18]*(z[8]*
       z[10]*z[12]*z[15]-z[4]*z[15]*(z[7]*z[11]+z[5]*z[12]*z[13])-z[16]*(z[7]*z[13]-z[5]*z[11]*z[12]))));
   z[36] = d1*z[27] + z[20]*z[28]*(z[2]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*
       z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))-z[17]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+
       z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*
       z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(
       d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))) + z[1]*z[28]*(z[17]*z[21]*(a3+z[3]*(a4+d6*z[4]*z[8]*z[12]+
       z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(
       d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[2]*
       z[21]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))+z[18]*(z[4]*
       z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*
       z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[
       7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))+z[22]*(z[19]*(z[4]*
       z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*
       z[7]*z[13]-d6*z[5]*z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))-z[3]*z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12])))) + z[27]*(z[17]*z[22]*(a3+z[3]*(a4+d6*z[
       4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[14]*(d6*z[8]*z[10]*z[12]*z[15]-d4*
       z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12])))+z[2]*z[22]*(z[14]*z[19]*(a4+d6*z[4]*z[8]*z[12]+z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*
       z[12]*z[13]))+z[18]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*z[10]*
       z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))+z[3]*z[19]*(d6*z[8]*z[10]*z[12]*z[15]-d4*
       z[16]-z[4]*z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*
       z[11]*z[12])))-z[21]*(z[19]*(z[4]*z[16]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-d4*z[15]-d6*z[8]*
       z[10]*z[12]*z[16]-z[15]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))-z[14]*z[18]*(a4+d6*z[4]*z[8]*z[12]+
       z[10]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13]))-z[3]*z[18]*(d6*z[8]*z[10]*z[12]*z[15]-d4*z[16]-z[4]*
       z[15]*(d5*z[11]+d6*z[7]*z[11]+d6*z[5]*z[12]*z[13])-z[16]*(d5*z[13]+d6*z[7]*z[13]-d6*z[5]*z[11]*z[12]))));

	   res.rot << z[23], z[24], z[25], z[29], z[30], z[31], z[33], z[34], z[35];
	   res.pos << z[26], z[32], z[36];
	   res = PoseProduct(res, tool);
	return res;
}

Pose UrRobot::FKSolveTool(VectorXd q)
{
	Pose res;
	res = FKSolveFast(q);
	res = PoseProduct(res, _tool);

	return res;
}

int UrRobot::IKSolve(Vector6d * q_out, Pose * pose, Vector6d * q_old)
{
	int error = 0;
	double s1 = 0, c1 = 0, s2 = 0, c2 = 0, s3 = 0, c3 = 0, s4 = 0, c4 = 0, s5 = 0, c5 = 0, s6 = 0,c6 = 0;
	double q1_1 = 0, q1_2 = 0, q5_1 = 0, q5_2 = 0, q6_1 = 0,q6_2 = 0, q6_3 = 0,q6_4 = 0,q3_1 = 0,q3_2= 0;
	VectorXd q(_nlinks),q_in(_nlinks);
	q.setZero();
	q_in = *q_old;
	double a3 = _mdh_table(2, 2);
	double a4 = _mdh_table(3, 2);
	double d1 = _mdh_table(0, 1);
	double d4 = _mdh_table(3, 1);
	double d5 = _mdh_table(4, 1);
	double d6 = _mdh_table(5, 1);
	Pose inv_tool;
	Pose mi;
	inv_tool.rot = _tool.rot.transpose();
	inv_tool.pos = -_tool.rot.transpose()*_tool.pos;
	//calc pose of mounting interface
	mi.pos = pose->rot*inv_tool.pos + pose->pos;
	mi.rot = pose->rot*inv_tool.rot;

	/* joint1 */
	double a1 = d6 * mi.rot(0, 2) - mi.pos(0);
	double b1 = mi.pos(1) - d6 * mi.rot(1, 2);
	double cc1 = -d4;
	double temp1 = a1*a1 + b1*b1 - cc1*cc1;
	int n;
	n = MathTools::CalcSinCosEqua(&q1_1, &q1_2, a1, b1, cc1);
	if ((n <= 0)|| (temp1 <	EPS5))
	{
        error = eArmSingularity;
		q(0) = q_in(0);
	}
	else
	{
		if (fabs(q1_1 - q_in(0)) < fabs(q1_2 - q_in(0)))
			q(0) = q1_1;
		else
			q(0) = q1_2;
	}
	s1 = sin(q(0)); c1 = cos(q(0));
	(*q_out)(0) = q(0);
	/* joint5 */
	double temp5 = mi.rot(1, 2)*c1 - mi.rot(0, 2)*s1;
	q5_1 = acos(temp5);
	q5_2 = -acos(temp5);
	if (fabs(q5_1 - q_in(4)) < fabs(q5_2 - q_in(4)))
		q(4) = q5_1;
	else
		q(4) = q5_2;
	s5 = sin(q(4)); c5 = cos(q(4));
	(*q_out)(4) = q(4);
	/* joint6 */
	int i;
	if (abs(s5) < EPS3)
	{
		q(5) = q_in(5);
        error = eWristSingularity;
	}
	else
	{
		double b6 = mi.rot(0, 0)*s1 - mi.rot(1, 0)*c1;
		double a6 = mi.rot(1, 1)*c1 - mi.rot(0, 1)*s1;
		//n = MathTools::CalcSinCosEqua(&q6_1, &q6_2, a6, b6, -s5);
		double temp_6 = b6*b6 + a6*a6 - s5*s5;
		if (fabs(temp_6)<EPS5)
		{
			temp_6 = 0.;
		}
		q6_1 = atan2(b6, -a6) - atan2(s5, sqrt(temp_6));
		q6_2 = atan2(b6, -a6) - atan2(s5, -sqrt(temp_6));
		double q6_temp[4];
		if (q6_1 > 0)
			q6_temp[2] = q6_1 - 2 * pi;
		else
			q6_temp[2] = q6_1 + 2 * pi;
		if (q6_2 > 0)
			q6_temp[3] = q6_2 - 2 * pi;
		else
			q6_temp[3] = q6_2 + 2 * pi;
		q6_temp[0] = q6_1; q6_temp[1] = q6_2;
		double temp_max = 10000;
		double temp_value = 0;
		for (i = 0; i < 4; i++)
		{
			temp_value = fabs(q6_temp[i] - q_in(5));

			if (temp_value < temp_max)
			{
				temp_max = temp_value;
				q(5) = q6_temp[i];
			}
		}
	}
	s6 = sin(q(5)); c6 = cos(q(5));
	(*q_out)(5) = q(5);
	/* joint3 */
	double m3 = mi.pos(0)*c1 + mi.pos(1)*s1 - d6*(mi.rot(1, 2)*s1 + mi.rot(0, 2)*c1) - d5*((mi.rot(0, 0)*c1 + mi.rot(1, 0)*s1)*s6 + (mi.rot(0, 1)*c1 + mi.rot(1, 1)*s1)*c6);
	double n3 = mi.pos(2) - d1 - d6*mi.rot(2, 2) - d5*(mi.rot(2, 1)*c6 + mi.rot(2, 0)*s6);
	double temp3 = (pow(a3 ,2) + pow(a4 ,2) - pow(m3 ,2) - pow(n3 , 2)) / (2 * a3*a4);
	if (fabs(temp3) < 0.99985)
	{
		q3_1 = asin(temp3);
		q3_2 = -pi - asin(temp3);
		if (fabs(q3_1 - q_in(2)) < fabs(q3_2 - q_in(2)))
			q(2) = q3_1;
		else
			q(2) = q3_2;
	}
	else
	{
		q(2) = q_in(2);
        error = eErrCalOutsideReach;
	}
	s3 = sin(q(2)); c3 = cos(q(2));
	(*q_out)(2) = q(2);
	/* joint2 */
	double A = a3 - a4*s3;
	double B = a4*c3;
	s2 = (A*m3 - B*n3) / (pow(A, 2) + pow(B, 2));
	c2 = (A*n3 + B*m3) / (pow(A, 2) + pow(B, 2));
	q(1) = atan2(s2, c2);
	s2 = sin(q(1)); c2 = cos(q(1));
	(*q_out)(1) = q(1);
	/* joint 4*/
	double s23 = sin(q(1) + q(2));
	double c23 = cos(q(1) + q(2));
	double c234 = mi.rot(2, 2)*s5 + mi.rot(2, 0)*c5*c6 - mi.rot(2, 1)*c5*s6;
	double s234 = mi.rot(0, 2)*c1*s5 + mi.rot(1, 2)*s1*s5 + mi.rot(0, 0)*c1*c5*c6 + mi.rot(1, 0)*c5*c6*s1 - mi.rot(0, 1)*c1*c5*s6 - mi.rot(1, 1)*c5*s1*s6;
	q(3) = atan2(s234*c23 - c234*s23, c234*c23 + s234*s23);
	(*q_out)(3) = q(3);
	return error;
}

int UrRobot::IKSolve(Vector6d * q_out, Pose * pose, Vector6d * q_old, Vector3i config)
{
	int error = 0;
	double s1 = 0, c1 = 0, s2 = 0, c2 = 0, s3 = 0, c3 = 0, s4 = 0, c4 = 0, s5 = 0, c5 = 0, s6 = 0, c6 = 0;
	double q1_1 = 0, q1_2 = 0, q5_1 = 0, q5_2 = 0, q6_1 = 0, q6_2 = 0, q6_3 = 0, q6_4 = 0, q3_1 = 0, q3_2 = 0;
	VectorXd q(_nlinks), q_in(_nlinks);
	q.setZero();
	q_in = *q_old;
	double a3 = _mdh_table(2, 2);
	double a4 = _mdh_table(3, 2);
	double d1 = _mdh_table(0, 1);
	double d4 = _mdh_table(3, 1);
	double d5 = _mdh_table(4, 1);
	double d6 = _mdh_table(5, 1);
	Pose inv_tool;
	Pose mi;
	inv_tool.rot = _tool.rot.transpose();
	inv_tool.pos = -_tool.rot.transpose()*_tool.pos;
	//calc pose of mounting interface
	mi.pos = pose->rot*inv_tool.pos + pose->pos;
	mi.rot = pose->rot*inv_tool.rot;

	/* joint1 */
	double a1 = d6 * mi.rot(0, 2) - mi.pos(0);
	double b1 = mi.pos(1) - d6 * mi.rot(1, 2);
	double cc1 = -d4;
	double temp1 = a1*a1 + b1*b1 - cc1*cc1;
	int n;
	n = MathTools::CalcSinCosEqua(&q1_1, &q1_2, a1, b1, cc1);
	double shoulder = a1*cos(q1_1) - b1*sin(q1_1);
	if ((n <= 0) || (temp1 < EPS5))
	{
		error = eArmSingularity;
		q(0) = q_in(0);
	}
	else
	{
		if (config(0))
		{
			if (shoulder > 0)
				q(0) = q1_1;
			else
				q(0) = q1_2;
		}
		else
		{
			if (shoulder > 0)
				q(0) = q1_2;
			else
				q(0) = q1_1;
		}
	}
	s1 = sin(q(0)); c1 = cos(q(0));
	(*q_out)(0) = q(0);
	/* joint5 */
	double temp5 = mi.rot(1, 2)*c1 - mi.rot(0, 2)*s1;
	if (config(2))
		q(4) = acos(temp5);
	else
		q(4) = -acos(temp5);
	s5 = sin(q(4)); c5 = cos(q(4));
	(*q_out)(4) = q(4);
	/* joint6 */
	int i;
	if (abs(s5) < EPS3)
	{
		q(5) = q_in(5);
		error = eWristSingularity;
	}
	else
	{
		double b6 = mi.rot(0, 0)*s1 - mi.rot(1, 0)*c1;
		double a6 = mi.rot(1, 1)*c1 - mi.rot(0, 1)*s1;
		//n = MathTools::CalcSinCosEqua(&q6_1, &q6_2, a6, b6, -s5);
		double temp_6 = b6*b6 + a6*a6 - s5*s5;
		if (fabs(temp_6)<EPS5)
		{
			temp_6 = 0.;
		}
		q6_1 = atan2(b6, -a6) - atan2(s5, sqrt(temp_6));
		q6_2 = atan2(b6, -a6) - atan2(s5, -sqrt(temp_6));
		double q6_temp[4];
		if (q6_1 > 0)
			q6_temp[2] = q6_1 - 2 * pi;
		else
			q6_temp[2] = q6_1 + 2 * pi;
		if (q6_2 > 0)
			q6_temp[3] = q6_2 - 2 * pi;
		else
			q6_temp[3] = q6_2 + 2 * pi;
		q6_temp[0] = q6_1; q6_temp[1] = q6_2;
		double temp_max = 10000;
		double temp_value = 0;
		for (i = 0; i < 4; i++)
		{
			temp_value = fabs(q6_temp[i] - q_in(5));

			if (temp_value < temp_max)
			{
				temp_max = temp_value;
				q(5) = q6_temp[i];
			}
		}
	}
	s6 = sin(q(5)); c6 = cos(q(5));
	(*q_out)(5) = q(5);
	/* joint3 */
	double m3 = mi.pos(0)*c1 + mi.pos(1)*s1 - d6*(mi.rot(1, 2)*s1 + mi.rot(0, 2)*c1) - d5*((mi.rot(0, 0)*c1 + mi.rot(1, 0)*s1)*s6 + (mi.rot(0, 1)*c1 + mi.rot(1, 1)*s1)*c6);
	double n3 = mi.pos(2) - d1 - d6*mi.rot(2, 2) - d5*(mi.rot(2, 1)*c6 + mi.rot(2, 0)*s6);
	double temp3 = (pow(a3, 2) + pow(a4, 2) - pow(m3, 2) - pow(n3, 2)) / (2 * a3*a4);
	if (fabs(temp3) < 0.99985)
	{
		if(config(1))
			q(2) = -pi - asin(temp3);
		else
			q(2) = asin(temp3);
	}
	else
	{
		q(2) = q_in(2);
		error = eErrCalOutsideReach;
	}
	s3 = sin(q(2)); c3 = cos(q(2));
	(*q_out)(2) = q(2);
	/* joint2 */
	double A = a3 - a4*s3;
	double B = a4*c3;
	s2 = (A*m3 - B*n3) / (pow(A, 2) + pow(B, 2));
	c2 = (A*n3 + B*m3) / (pow(A, 2) + pow(B, 2));
	q(1) = atan2(s2, c2);
	s2 = sin(q(1)); c2 = cos(q(1));
	(*q_out)(1) = q(1);
	/* joint 4*/
	double s23 = sin(q(1) + q(2));
	double c23 = cos(q(1) + q(2));
	double c234 = mi.rot(2, 2)*s5 + mi.rot(2, 0)*c5*c6 - mi.rot(2, 1)*c5*s6;
	double s234 = mi.rot(0, 2)*c1*s5 + mi.rot(1, 2)*s1*s5 + mi.rot(0, 0)*c1*c5*c6 + mi.rot(1, 0)*c5*c6*s1 - mi.rot(0, 1)*c1*c5*s6 - mi.rot(1, 1)*c5*s1*s6;
	q(3) = atan2(s234*c23 - c234*s23, c234*c23 + s234*s23);
	(*q_out)(3) = q(3);
	return error;
}

int UrRobot::IKSolveRecursive(Vector6d *q_out, Pose *pose, Vector6d *q_old)
{
	VectorXd q(_nlinks);
	q = *q_old;
	Pose pose_in = *pose;
	Pose mi;
	mi = RobotTools::PoseProduct(pose_in,RobotTools::PoseInverse(_tool));
	//Newton-Raphson method
	Pose pose_temp = FKSolveFast(q);
	Vector6d err;
	err << EPS5, EPS5, EPS5, EPS5, EPS5, EPS5;
	int idx = 1;
	do
	{
		Matrix6d jaco;
		jaco = CalcBodyJaco(q);
		Pose deltapose = PoseProduct(RobotTools::PoseInverse(pose_temp), mi);
		Vector6d deltaT = LogT(deltapose);
		if (fabs(deltaT(0))<err(0) && fabs(deltaT(1)) < err(1) && fabs(deltaT(2)) < err(2)
			&& fabs(deltaT(3)) < err(3) && fabs(deltaT(4)) < err(4) && fabs(deltaT(5)) < err(5))
			break;
		Vector6d dq = jaco.colPivHouseholderQr().solve(deltaT);
		q += dq;
		pose_temp = FKSolveFast(q);
		idx++;
	} while (idx < 50);

	(*q_out) = q;

	return 0;//todo check singualrity
}

MatrixXd UrRobot::CalcJaco(VectorXd q)
{
	MatrixXd jaco(6, _nlinks), jv(3, _nlinks), jw(3, _nlinks);
	Vector3d z0(0, 0, 1);
	Vector3d pt = FKSolve(q).pos;//not account for tool transform
	Pose tmp_p = Transform(q, 0, 0);
	for (int idx = 0; idx<_nlinks; idx++)
	{
		Pose tmp_pose = Transform(q, 0, idx + 1);
		Matrix3d rot_0_t = tmp_pose.rot;
		Vector3d pos_0_t = tmp_pose.pos;
		if (_type(idx) == e_rotation)
		{
			jw.col(idx) = rot_0_t*z0;
			jv.col(idx) = MathTools::Cross(jw.col(idx), pt - pos_0_t);
		}
		else
		{

			jw.col(idx).setZero();
			jv.col(idx) = rot_0_t*z0;
		}

	}
	jaco << jv, jw;

	return jaco;
}

MatrixXd UrRobot::CalcJacoFast(VectorXd q)
{
	double a3, a4, alpha1, alpha2, alpha3, alpha4, alpha5, alpha6, d4, d5, d6, q1, q2, q3, q4, q5,
		th1, th2, th3, th4, th5;
		double z[53];
	a3 = _mdh_table(2, 2);a4 = _mdh_table(3, 2);
	d4 = _mdh_table(3, 1);d5 = _mdh_table(4, 1);d6 = _mdh_table(5, 1);
	alpha1 = _mdh_table(0, 3); alpha2 = _mdh_table(1, 3); alpha3 = _mdh_table(2, 3); alpha4 = _mdh_table(3, 3);
	alpha5 = _mdh_table(4, 3); alpha6 = _mdh_table(5, 3);
	th1 = _mdh_table(0, 0)+ _offset(0); th2 = _mdh_table(1, 0)+ _offset(1); th3 = _mdh_table(2, 0)+ _offset(2); th4 = _mdh_table(3, 0)+ _offset(3);
	th5 = _mdh_table(4, 0)+ _offset(4);
	q1 = q(0); q2 = q(1); q3 = q(2), q4 = q(3); q5 = q(4);
   z[1] = cos(alpha1);
   z[2] = sin(alpha1);
   z[3] = sin(alpha2);
   z[4] = sin(q2+th2);
   z[5] = cos(q3+th3);
   z[6] = sin(alpha6);
   z[7] = sin(q5+th5);
   z[8] = cos(q4+th4);
   z[9] = sin(q4+th4);
   z[10] = sin(alpha5);
   z[11] = cos(alpha6);
   z[12] = cos(alpha5);
   z[13] = cos(q5+th5);
   z[14] = sin(q3+th3);
   z[15] = cos(alpha4);
   z[16] = sin(alpha4);
   z[17] = cos(alpha2);
   z[18] = sin(alpha3);
   z[19] = cos(alpha3);
   z[20] = cos(q2+th2);
   z[21] = sin(q1+th1);
   z[22] = cos(q1+th1);
   z[23] = (pow(z[1],2)+pow(z[2],2))*(z[21]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+
       d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+
       z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*
       z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(
       z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[24] = z[1]*(z[22]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-
       z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[25] = z[2]*(z[22]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-
       z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[26] = -(z[2]*z[17]+z[1]*z[3]*z[22])*(z[2]*z[21]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*
       z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*(z[3]*z[4]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[
       8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+
       z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(
       z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(
       z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(
       a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*
       z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*
       z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[
       8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*
       z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) - (z[1]*
       z[17]-z[2]*z[3]*z[22])*(z[1]*z[21]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+
       z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*
       z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*
       z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[2]*(z[3]*z[4]*(a3+z[5]*(a4+d6*z[6]*
       z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+
       z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(
       z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(
       z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[27] = (z[1]*z[17]-z[2]*z[3]*z[22])*(z[22]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*
       z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*
       z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(
       z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) - z[3]*z[21]*(z[2]*z[21]*(z[20]*(a3+
       z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*
       z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-
       z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+
       z[1]*(z[3]*z[4]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+
       d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*
       z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[
       7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[
       5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*
       z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[28] = (z[2]*z[17]+z[1]*z[3]*z[22])*(z[22]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*
       z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*
       z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(
       z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) + z[3]*z[21]*(z[1]*z[21]*(z[20]*(a3+
       z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*
       z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-
       z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+
       z[1]*z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-
       z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*
       z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))-z[2]*(z[3]*z[4]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[29] = (z[1]*z[4]*z[18]*z[21]-z[1]*z[22]*(z[3]*z[19]+z[17]*z[18]*z[20])-z[2]*(z[17]*z[19]-z[3]*z[18]*z[20]))*(
       z[2]*z[21]*(z[20]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*(z[3]*z[4]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[
       7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[
       5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*
       z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*
       z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) - (z[2]*z[4]*z[18]*z[21]+z[1]*(
       z[17]*z[19]-z[3]*z[18]*z[20])-z[2]*z[22]*(z[3]*z[19]+z[17]*z[18]*z[20]))*(z[1]*z[21]*(z[20]*(z[5]*(a4+d6*
       z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+
       z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*
       z[22]*(z[4]*z[17]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*
       z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))-z[2]*(z[3]*z[4]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[
       7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[
       5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*
       z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[30] = (z[2]*z[4]*z[18]*z[21]+z[1]*(z[17]*z[19]-z[3]*z[18]*z[20])-z[2]*z[22]*(z[3]*z[19]+z[17]*z[18]*z[20]))*(
       z[22]*(z[20]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[
       6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+
       d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[
       7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))))-z[21]*(z[4]*z[17]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[
       8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*
       z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*
       z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))) - (z[4]*z[18]*z[22]+z[21]*(z[3]*z[19]+z[17]*z[18]*z[20]))*(z[2]*z[21]*(
       z[20]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*
       z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[
       8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))))+z[1]*(z[3]*z[4]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-
       z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+
       d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*
       z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[
       8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*
       z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*
       z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))));
   z[31] = (z[4]*z[18]*z[22]+z[21]*(z[3]*z[19]+z[17]*z[18]*z[20]))*(z[1]*z[21]*(z[20]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+
       z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(
       z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*z[22]*(z[4]*z[17]*(
       z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*
       z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*
       z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[
       8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*
       z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[2]*(z[
       3]*z[4]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+
       d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[
       7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[
       7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) - (z[1]*
       z[4]*z[18]*z[21]-z[1]*z[22]*(z[3]*z[19]+z[17]*z[18]*z[20])-z[2]*(z[17]*z[19]-z[3]*z[18]*z[20]))*(z[22]*(
       z[20]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*
       z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[
       8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))))-z[21]*(z[4]*z[17]*(z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*
       z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*
       z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))));
   z[32] = (z[1]*z[21]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19]))+z[2]*(z[3]*z[20]*(z[15]*z[18]+z[5]*
       z[16]*z[19])-z[3]*z[4]*z[14]*z[16]-z[17]*(z[15]*z[19]-z[5]*z[16]*z[18]))+z[1]*z[22]*(z[4]*z[14]*z[16]*
       z[17]-z[3]*(z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])))*(z[2]*z[21]*(
       z[20]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[
       9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13])))-z[4]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+
       z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*(z[3]*z[4]*(z[5]*(
       d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+
       z[3]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+
       d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*
       z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*
       z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(
       d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[
       8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) + (z[1]*(
       z[3]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])-z[3]*z[4]*z[14]*z[16]-z[17]*(z[15]*z[19]-z[5]*z[16]*z[18]))-z[2]*
       z[21]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19]))-z[2]*z[22]*(z[4]*z[14]*z[16]*z[17]-z[3]*(
       z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])))*(z[1]*z[21]*(z[20]*(z[5]*(d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-
       z[4]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*z[22]*(z[4]*z[17]*(z[5]*(d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+
       z[17]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[
       8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*
       z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))-z[2]*(z[3]*z[4]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[
       9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[33] = -(z[1]*(z[3]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])-z[3]*z[4]*z[14]*z[16]-z[17]*(z[15]*z[19]-z[5]*
       z[16]*z[18]))-z[2]*z[21]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19]))-z[2]*z[22]*(z[4]*z[14]*
       z[16]*z[17]-z[3]*(z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])))*(z[22]*(
       z[20]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[
       9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13])))-z[4]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+
       z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(z[5]*(
       d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+
       z[17]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[
       8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*
       z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))) - (z[22]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19]))-z[21]*(z[
       4]*z[14]*z[16]*z[17]-z[3]*(z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])))*(z[
       2]*z[21]*(z[20]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[
       6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-
       z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*(z[
       3]*z[4]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*
       z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(z[5]*(d6*z[6]*z[7]*z[8]+z[
       9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(
       z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[
       7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))));
   z[34] = (z[22]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19]))-z[21]*(z[4]*z[14]*z[16]*z[17]-z[3]*(
       z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])))*(z[1]*z[21]*(z[20]*(z[5]*(d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-
       z[4]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))+z[1]*z[22]*(z[4]*z[17]*(z[5]*(d6*z[
       6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+
       z[17]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[
       8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*
       z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*
       z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13]))))-z[2]*(z[3]*z[4]*(z[5]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[
       9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) - (z[1]*z[21]*(
       z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19]))+z[2]*(z[3]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])-z[
       3]*z[4]*z[14]*z[16]-z[17]*(z[15]*z[19]-z[5]*z[16]*z[18]))+z[1]*z[22]*(z[4]*z[14]*z[16]*z[17]-z[3]*(z[15]*
       z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])))*(z[22]*(z[20]*(z[5]*(d6*z[6]*z[7]*z[
       8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(
       z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(z[5]*(d6*z[6]*z[7]*z[8]+
       z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(
       z[14]*z[19]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*
       z[11]+d6*z[6]*z[12]*z[13])-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[
       7]*z[9]*z[15]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))));
   z[35] = -(z[1]*z[21]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*
       z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))+z[1]*z[22]*(z[4]*
       z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[
       5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))+z[2]*(z[17]*(z[5]*z[18]*(
       z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))-z[3]*z[4]*(z[5]*
       z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[3]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*
       z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))))*(z[2]*z[21]*(z[20]*(a3+z[5]*(a4+d5*z[9]*
       z[10])+z[14]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15]))-z[4]*(z[14]*z[19]*(a4+d5*z[9]*z[10])-z[5]*
       z[19]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[18]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16])))+
       z[2]*z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d5*z[9]*z[10])+z[14]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15]))+z[
       3]*(z[5]*z[18]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[14]*z[18]*(a4+d5*z[9]*z[10])-z[19]*(d4*
       z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16]))+z[17]*z[20]*(z[14]*z[19]*(a4+d5*z[9]*z[10])-z[5]*z[19]*(d4*
       z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[18]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16])))-z[1]*(
       z[17]*(z[5]*z[18]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[14]*z[18]*(a4+d5*z[9]*z[10])-z[19]*(d4*
       z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16]))-z[3]*z[4]*(a3+z[5]*(a4+d5*z[9]*z[10])+z[14]*(d4*z[16]+d5*
       z[12]*z[16]+d5*z[8]*z[10]*z[15]))-z[3]*z[20]*(z[14]*z[19]*(a4+d5*z[9]*z[10])-z[5]*z[19]*(d4*z[16]+d5*
       z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[18]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16])))-z[2]*z[21]*(z[20]*(
       a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*
       z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*
       z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*
       z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-
       z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*
       z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-
       z[1]*(z[3]*z[4]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(
       d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*
       z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+
       d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[
       7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*
       z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*
       z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*
       z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))))-z[2]*z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[
       7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[
       5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*
       z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))))) - (z[2]*z[21]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*
       z[15]))-z[4]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*
       z[10]*z[16])))+z[2]*z[22]*(z[4]*z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*
       z[18]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*
       z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*
       z[16])))-z[1]*(z[17]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*
       z[15]-z[8]*z[10]*z[16]))-z[3]*z[4]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[3]*z[20]*(z[9]*
       z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))))*(z[1]*
       z[21]*(z[20]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*
       z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+
       d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[
       7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*
       z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*
       z[10]*z[13]))))+z[1]*z[22]*(z[4]*z[17]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[
       6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[
       7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[
       5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-
       z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*
       z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13]))-
       z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*
       z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))))-z[1]*z[21]*(z[20]*(a3+z[5]*(a4+d5*z[9]*z[10])+z[14]*(d4*z[16]+d5*
       z[12]*z[16]+d5*z[8]*z[10]*z[15]))-z[4]*(z[14]*z[19]*(a4+d5*z[9]*z[10])-z[5]*z[19]*(d4*z[16]+d5*z[12]*
       z[16]+d5*z[8]*z[10]*z[15])-z[18]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16])))-z[1]*z[22]*(z[4]*z[17]*(
       a3+z[5]*(a4+d5*z[9]*z[10])+z[14]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(d4*
       z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[14]*z[18]*(a4+d5*z[9]*z[10])-z[19]*(d4*z[15]+d5*z[12]*z[15]-d5*
       z[8]*z[10]*z[16]))+z[17]*z[20]*(z[14]*z[19]*(a4+d5*z[9]*z[10])-z[5]*z[19]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*
       z[10]*z[15])-z[18]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16])))-z[2]*(z[17]*(z[5]*z[18]*(d4*z[16]+d5*
       z[12]*z[16]+d5*z[8]*z[10]*z[15])-z[14]*z[18]*(a4+d5*z[9]*z[10])-z[19]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*
       z[10]*z[16]))-z[3]*z[4]*(a3+z[5]*(a4+d5*z[9]*z[10])+z[14]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15]))-
       z[3]*z[20]*(z[14]*z[19]*(a4+d5*z[9]*z[10])-z[5]*z[19]*(d4*z[16]+d5*z[12]*z[16]+d5*z[8]*z[10]*z[15])-
       z[18]*(d4*z[15]+d5*z[12]*z[15]-d5*z[8]*z[10]*z[16])))-z[2]*(z[3]*z[4]*(a3+z[5]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(
       d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))-z[14]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*
       z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))+z[3]*
       z[20]*(z[14]*z[19]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13]))+z[18]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))+z[5]*z[19]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*
       z[10]*z[11]+d6*z[6]*z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*
       z[16]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*z[12]*z[13])-d4*z[15]-d6*z[6]*z[7]*z[9]*z[16]-z[15]*(d5*z[12]+d6*
       z[11]*z[12]-d6*z[6]*z[10]*z[13]))-z[14]*z[18]*(a4+d6*z[6]*z[7]*z[8]+z[9]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13]))-z[5]*z[18]*(d6*z[6]*z[7]*z[9]*z[15]-d4*z[16]-z[8]*z[15]*(d5*z[10]+d6*z[10]*z[11]+d6*z[6]*
       z[12]*z[13])-z[16]*(d5*z[12]+d6*z[11]*z[12]-d6*z[6]*z[10]*z[13])))));
   z[36] = d6*((z[2]*z[21]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*
       z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))+z[2]*z[22]*(z[4]*
       z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[
       5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))-z[1]*(z[17]*(z[5]*z[18]*(
       z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))-z[3]*z[4]*(z[5]*
       z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[3]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*
       z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))))*(z[22]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(
       z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*
       z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*
       z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*
       z[12]-z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-
       z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*
       z[13])))+z[17]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(
       z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*
       z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*(
       z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*
       z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))))-(z[22]*(z[20]*(z[
       5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+
       z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))-z[21]*(z[4]*z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*
       z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(
       z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))))*(z[2]*z[21]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*
       z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(
       z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+
       z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*
       z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*
       z[10]*z[13]))))+z[1]*(z[3]*z[4]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[
       7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*
       z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[
       6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*
       z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*
       z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(
       z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13]))))+z[2]*z[22]*(z[4]*z[17]*(z[5]*(z[6]*
       z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*
       z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*
       z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(
       z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[
       9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*
       z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*
       z[10]*z[13]))))));
   z[37] = d6*((z[1]*z[21]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*
       z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))+z[1]*z[22]*(z[4]*
       z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[
       5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))+z[2]*(z[17]*(z[5]*z[18]*(
       z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))-z[3]*z[4]*(z[5]*
       z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[3]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*
       z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))))*(z[22]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(
       z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*
       z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*
       z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*
       z[12]-z[6]*z[10]*z[13]))))-z[21]*(z[4]*z[17]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-
       z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*
       z[13])))+z[17]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(
       z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*
       z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*(
       z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*
       z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))))-(z[22]*(z[20]*(z[
       5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+
       z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])))-z[21]*(z[4]*z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*
       z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(
       z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))))*(z[1]*z[21]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*
       z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(
       z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+
       z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*
       z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*
       z[10]*z[13]))))+z[1]*z[22]*(z[4]*z[17]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(
       z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+
       z[17]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*
       z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*
       z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*(z[19]*(
       z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-
       z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*
       z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13]))))-z[2]*(z[3]*z[4]*(z[5]*(z[6]*
       z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*
       z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*
       z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(
       z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*
       z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*
       z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*
       z[12]-z[6]*z[10]*z[13]))))));
   z[38] = z[3]*z[21];
   z[39] = -z[2]*z[17] - z[1]*z[3]*z[22];
   z[40] = z[1]*z[17] - z[2]*z[3]*z[22];
   z[41] = z[4]*z[18]*z[22] + z[21]*(z[3]*z[19]+z[17]*z[18]*z[20]);
   z[42] = z[1]*z[4]*z[18]*z[21] - z[1]*z[22]*(z[3]*z[19]+z[17]*z[18]*z[20]) - z[2]*(z[17]*z[19]-z[3]*z[18]*
       z[20]);
   z[43] = z[2]*z[4]*z[18]*z[21] + z[1]*(z[17]*z[19]-z[3]*z[18]*z[20]) - z[2]*z[22]*(z[3]*z[19]+z[17]*z[18]*
       z[20]);
   z[44] = z[22]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19])) - z[21]*(z[4]*z[14]*z[16]*z[17]-z[3]*(
       z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19]));
   z[45] = z[1]*z[21]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19])) + z[2]*(z[3]*z[20]*(z[15]*z[18]+z[
       5]*z[16]*z[19])-z[3]*z[4]*z[14]*z[16]-z[17]*(z[15]*z[19]-z[5]*z[16]*z[18])) + z[1]*z[22]*(z[4]*z[14]*
       z[16]*z[17]-z[3]*(z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19]));
   z[46] = z[2]*z[21]*(z[14]*z[16]*z[20]+z[4]*(z[15]*z[18]+z[5]*z[16]*z[19])) + z[2]*z[22]*(z[4]*z[14]*z[16]*
       z[17]-z[3]*(z[15]*z[19]-z[5]*z[16]*z[18])-z[17]*z[20]*(z[15]*z[18]+z[5]*z[16]*z[19])) - z[1]*(z[3]*z[20]*(
       z[15]*z[18]+z[5]*z[16]*z[19])-z[3]*z[4]*z[14]*z[16]-z[17]*(z[15]*z[19]-z[5]*z[16]*z[18]));
   z[47] = z[22]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*z[19]-z[5]*
       z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))) - z[21]*(z[4]*z[17]*(z[5]*z[9]*
       z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*
       z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*
       z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])));
   z[48] = z[1]*z[21]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*
       z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))) + z[1]*z[22]*(z[4]*
       z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[
       5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))) + z[2]*(z[17]*(z[5]*z[18]*(
       z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))-z[3]*z[4]*(z[5]*
       z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[3]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*
       z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])));
   z[49] = z[2]*z[21]*(z[20]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[4]*(z[9]*z[10]*z[14]*
       z[19]-z[5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))) + z[2]*z[22]*(z[4]*
       z[17]*(z[5]*z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))+z[3]*(z[5]*z[18]*(z[12]*z[16]+z[8]*z[10]*
       z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))+z[17]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[
       5]*z[19]*(z[12]*z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16]))) - z[1]*(z[17]*(z[5]*z[18]*(
       z[12]*z[16]+z[8]*z[10]*z[15])-z[9]*z[10]*z[14]*z[18]-z[19]*(z[12]*z[15]-z[8]*z[10]*z[16]))-z[3]*z[4]*(z[5]*
       z[9]*z[10]+z[14]*(z[12]*z[16]+z[8]*z[10]*z[15]))-z[3]*z[20]*(z[9]*z[10]*z[14]*z[19]-z[5]*z[19]*(z[12]*
       z[16]+z[8]*z[10]*z[15])-z[18]*(z[12]*z[15]-z[8]*z[10]*z[16])));
   z[50] = z[22]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[
       8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(z[6]*z[
       7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[
       9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[
       6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))) - z[21]*(z[4]*z[17]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(
       z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[
       6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*
       z[12]-z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-
       z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[
       5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*
       z[13]))));
   z[51] = z[1]*z[21]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(
       z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*
       z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*
       z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))) + z[1]*z[22]*(z[4]*z[17]*(z[5]*(z[6]*z[7]*
       z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*
       z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[17]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+
       z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*
       z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[
       9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*
       z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*
       z[10]*z[13])))) - z[2]*(z[3]*z[4]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*
       z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*
       z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[
       6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*
       z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*
       z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(
       z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13]))));
   z[52] = z[2]*z[21]*(z[20]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))-z[4]*(z[14]*z[19]*(
       z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*
       z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*
       z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))) + z[1]*(z[3]*z[4]*(z[5]*(z[6]*z[7]*z[8]+z[
       9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-
       z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*
       z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[
       6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*
       z[12]-z[6]*z[10]*z[13])))-z[17]*(z[19]*(z[8]*z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-
       z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[
       5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*
       z[13])))) + z[2]*z[22]*(z[4]*z[17]*(z[5]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[14]*(z[6]*
       z[7]*z[9]*z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[17]*
       z[20]*(z[14]*z[19]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))+z[18]*(z[8]*z[16]*(z[10]*z[11]+z[
       6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))+z[5]*z[19]*(z[6]*z[7]*z[9]*
       z[15]-z[8]*z[15]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13])))+z[3]*(z[19]*(z[8]*
       z[16]*(z[10]*z[11]+z[6]*z[12]*z[13])-z[6]*z[7]*z[9]*z[16]-z[15]*(z[11]*z[12]-z[6]*z[10]*z[13]))-z[14]*
       z[18]*(z[6]*z[7]*z[8]+z[9]*(z[10]*z[11]+z[6]*z[12]*z[13]))-z[5]*z[18]*(z[6]*z[7]*z[9]*z[15]-z[8]*z[15]*(
       z[10]*z[11]+z[6]*z[12]*z[13])-z[16]*(z[11]*z[12]-z[6]*z[10]*z[13]))));

	MatrixXd jaco;
	jaco.resize(6, 6);
	jaco << -z[23], z[26], z[29], z[32], z[35], 0,
		z[24], z[27], z[30], z[33], z[36], 0,
		z[25], z[28], z[31], z[34], -z[37], 0,
		0, z[38], z[41], z[44], z[47], z[50],
		-z[2], z[39], z[42], z[45], z[48], z[51],
		z[1], z[40], z[43], z[46], z[49], z[52];
	return jaco;
}

MatrixXd UrRobot::CalcBodyJaco(VectorXd q)
{
	MatrixXd spatial_jaco, jaco(6, _nlinks);
	MatrixXd rot = FKSolveFast(q).rot;
	spatial_jaco = CalcJacoFast(q);
	Matrix6d res;
	res.block(0, 0, 3, 3) = rot.transpose();
	res.block(0, 3, 3, 3) = Matrix3d::Zero(3, 3);
	res.block(3, 0, 3, 3) = Matrix3d::Zero(3, 3);
	res.block(3, 3, 3, 3) = res.block(0, 0, 3, 3);
	jaco = res*spatial_jaco;
	return jaco;
}

MatrixXd UrRobot::CalcJv(VectorXd q)
{
	MatrixXd jaco(6, _nlinks), jv(3, _nlinks);
	jaco = CalcJaco(q);
	jv = jaco.topRows(3);

	return jv;
}

MatrixXd UrRobot::CalcJw(VectorXd q)
{
	MatrixXd jaco(6, _nlinks), jw(3, _nlinks);
	jaco = CalcJaco(q);
	jw = jaco.bottomRows(3);

	return jw;
}

MatrixXd UrRobot::CalcThToolJaco(Vector6d q, MatrixXd DH, Pose tool)
{
	double a3, a4,a5,a6, alpha1, alpha2, alpha3, alpha4, alpha5, alpha6,d3, d4, d5, d6, q1, q2, q3, q4, q5,q6,
		th1, th2, th3, th4, th5,th6,x,y,z;
	a3 = DH(2, 2); a4 = DH(3, 2); a5 = DH(4, 2); a6 = DH(5, 2);
	d3 = DH(2, 1); d4 = DH(3, 1); d5 = DH(4, 1); d6 = DH(5, 1);
	alpha1 = DH(0, 3); alpha2 = DH(1, 3); alpha3 = DH(2, 3); alpha4 = DH(3, 3);alpha5 = DH(4, 3); alpha6 = DH(5, 3);
	th1 = DH(0, 0); th2 = DH(1, 0); th3 = DH(2, 0); th4 = DH(3, 0);th5 = DH(4, 0); th6 = DH(5, 0);
	q1 = q(0); q2 = q(1); q3 = q(2), q4 = q(3); q5 = q(4); q6 = q(5);
	x = tool.pos(0); y = tool.pos(1); z = tool.pos(2);
	double Z[46];  MatrixXd jaco;
	jaco.resize(3, 7);
	   Z[1] = cos(q1+th1);
   Z[2] = sin(q2+th2);
   Z[3] = cos(q3+th3);
   Z[4] = cos(q4+th4);
   Z[5] = cos(q5+th5);
   Z[6] = cos(q6+th6);
   Z[7] = sin(q6+th6);
   Z[8] = sin(q5+th5);
   Z[9] = sin(alpha6);
   Z[10] = cos(alpha6);
   Z[11] = sin(q4+th4);
   Z[12] = cos(alpha5);
   Z[13] = sin(alpha5);
   Z[14] = sin(q3+th3);
   Z[15] = sin(alpha4);
   Z[16] = cos(alpha4);
   Z[17] = cos(q2+th2);
   Z[18] = cos(alpha3);
   Z[19] = sin(alpha3);
   Z[20] = cos(alpha2);
   Z[21] = sin(q1+th1);
   Z[22] = -Z[1]*(Z[2]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[
       6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - 
       Z[20]*Z[21]*(Z[17]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[
       6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[23] = sin(alpha2);
   Z[24] = Z[21]*(Z[19]*Z[23]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[
       6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[2]*Z[20]*(Z[14]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*
       Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[17]*Z[18]*
       Z[20]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(
       Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[
       9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+
       Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[1]*(Z[2]*Z[18]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+
       Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*(Z[14]*(a4+
       Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*
       Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[
       7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10])))));
   Z[25] = Z[21]*(Z[2]*Z[20]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[20]*(
       Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+
       y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(Z[4]*(a5+Z[5]*(a6+
       x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))))-Z[23]*(Z[14]*Z[19]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[15]*Z[18]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[19]*(
       Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*
       Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))))) - Z[1]*(Z[17]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[
       6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*
       Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-
       Z[2]*(Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(
       Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[
       9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*
       Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(Z[4]*(a5+Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10])))));
   Z[26] = Z[21]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*
       Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[
       5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-
       Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*
       Z[18]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*
       Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[
       6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*
       Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+
       z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[18]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*
       Z[19]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*
       Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[
       6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[1]*(Z[17]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-
       y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[
       9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[
       9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(
       Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(
       Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*
       Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[
       8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[18]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*
       Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[27] = Z[1]*(Z[17]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*
       Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*
       Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))+Z[2]*(Z[19]*(
       Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*
       Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[6]-
       Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))) - Z[21]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*
       Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*
       Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*
       Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*
       Z[10]*Z[12]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+
       Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[17]*Z[20]*(
       Z[19]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*
       Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[
       7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[
       5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[
       9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))));
   Z[28] = Z[21]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*
       Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))-Z[23]*(
       Z[14]*Z[19]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[
       6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[
       5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[
       8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))-Z[17]*Z[20]*(Z[19]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*
       Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[
       8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*
       Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[13])))) - Z[1]*(Z[17]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[
       5]*Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))+Z[2]*(Z[19]*(
       Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[
       8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[
       7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*
       Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))));
   Z[29] = Z[1]*(Z[17]*(Z[3]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[
       4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))-Z[2]*(Z[14]*Z[18]*(Z[4]*Z[8]*
       Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*
       Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*
       Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))) - Z[21]*(Z[2]*Z[20]*(Z[3]*(Z[4]*Z[8]*Z[9]+
       Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*
       Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+
       Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*
       Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(
       Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[23]*(Z[18]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*
       Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))-Z[14]*Z[19]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*
       Z[12]))-Z[3]*Z[19]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*
       Z[9]*Z[13]))));
   Z[30] = cos(alpha1);
   Z[31] = sin(alpha1);
   Z[32] = Z[1]*Z[20]*Z[30]*(Z[17]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*
       Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*
       Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       d3*Z[19]-Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - 
       Z[21]*Z[30]*(Z[2]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[
       6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - 
       Z[23]*Z[31]*(Z[17]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[
       6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[33] = Z[31]*(Z[2]*Z[23]*(Z[14]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-
       y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[19]*Z[20]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*
       Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[17]*Z[18]*
       Z[23]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(
       Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[
       9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+
       Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[21]*Z[30]*(Z[2]*Z[18]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*
       Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*(Z[14]*(a4+
       Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*
       Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[
       7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10]))))) - Z[1]*Z[30]*(Z[19]*Z[23]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*
       Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[
       9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[
       8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*
       Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[2]*Z[20]*(Z[14]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*
       Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[
       9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(
       d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[17]*
       Z[18]*Z[20]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-
       y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[34] = Z[31]*(Z[2]*Z[23]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[23]*(
       Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+
       y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(Z[4]*(a5+Z[5]*(a6+
       x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))))+Z[20]*(Z[14]*Z[19]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[15]*Z[18]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[19]*(
       Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*
       Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))))) - Z[21]*Z[30]*(Z[17]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[
       9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*
       Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))))-Z[2]*(Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(
       Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*
       Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))))) - Z[1]*Z[30]*(Z[2]*Z[20]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[
       7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*
       Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(
       d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+
       z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*
       Z[18]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[23]*(Z[14]*Z[19]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[
       7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[15]*Z[18]*(Z[4]*(a5+Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10])))-Z[3]*Z[16]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[35] = Z[31]*(Z[2]*Z[23]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*
       Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[
       5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[23]*(Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-
       Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*
       Z[18]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*
       Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[
       6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[20]*(Z[14]*Z[19]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*
       Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+
       z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[18]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*
       Z[19]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*
       Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[
       6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[21]*Z[30]*(Z[17]*(Z[3]*(Z[4]*(Z[8]*(a6+
       x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(
       d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+
       z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-
       Z[2]*(Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*
       Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[
       7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[18]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[
       9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[1]*
       Z[30]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*
       Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[18]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+
       z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))-Z[18]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*
       Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[19]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[36] = Z[21]*Z[30]*(Z[17]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*
       Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+
       Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))+Z[2]*(Z[19]*(
       Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*
       Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[6]-
       Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))) + Z[1]*Z[30]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*
       Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*
       Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*
       Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*
       Z[10]*Z[12]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+
       Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[17]*Z[20]*(
       Z[19]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*
       Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[
       7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[
       5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[
       9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))) - Z[31]*(Z[2]*Z[23]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*
       Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*
       Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))+Z[20]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*
       Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*
       Z[10]*Z[12]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+
       Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[17]*Z[23]*(
       Z[19]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*
       Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[
       7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[
       5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[
       9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))));
   Z[37] = Z[31]*(Z[2]*Z[23]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*
       Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))+Z[20]*(
       Z[14]*Z[19]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[
       6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[
       5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[
       8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))-Z[17]*Z[23]*(Z[19]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*
       Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[
       8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*
       Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[13])))) - Z[21]*Z[30]*(Z[17]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+
       Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))+Z[
       2]*(Z[19]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*
       Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[7]+
       Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(
       Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*
       Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))) - Z[1]*Z[30]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*
       Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+
       Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*
       Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-
       Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*
       Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*
       Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[13])))-Z[17]*Z[20]*(Z[19]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(
       Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*
       Z[18]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*
       Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))));
   Z[38] = Z[21]*Z[30]*(Z[17]*(Z[3]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*Z[9]*Z[11]*
       Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))-Z[2]*(Z[14]*Z[18]*(Z[
       4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[
       9]*Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*
       Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))) + Z[1]*Z[30]*(Z[2]*Z[20]*(Z[3]*(Z[4]*Z[8]*Z[
       9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*
       Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+
       Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*
       Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(
       Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[23]*(Z[18]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*
       Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))-Z[14]*Z[19]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*
       Z[12]))-Z[3]*Z[19]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*
       Z[9]*Z[13])))) - Z[31]*(Z[2]*Z[23]*(Z[3]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*
       Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[17]*
       Z[23]*(Z[14]*Z[18]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[
       5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*
       Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))-Z[20]*(Z[18]*(Z[4]*
       Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))-Z[14]*
       Z[19]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[3]*Z[19]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(
       Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))));
   Z[39] = Z[23]*Z[30]*(Z[17]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*
       Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*
       Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) + 
       Z[1]*Z[20]*Z[31]*(Z[17]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*
       Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*
       Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - 
       Z[21]*Z[31]*(Z[2]*(a3+Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[
       5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[
       6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*(Z[14]*Z[18]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-d3*Z[19]-
       Z[19]*(d4*Z[16]+Z[11]*Z[15]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[16]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[15]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[18]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[40] = -Z[21]*Z[31]*(Z[2]*Z[18]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*
       Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*(Z[14]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*
       Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[1]*Z[31]*(
       Z[19]*Z[23]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-
       y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*
       Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[2]*Z[20]*(Z[14]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+
       Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*
       Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*
       Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[17]*Z[18]*
       Z[20]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(
       Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[
       9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+
       Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[30]*(Z[2]*Z[23]*(Z[14]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(
       d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+
       z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*(d4*Z[15]+
       Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[19]*Z[20]*(Z[3]*(
       a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+
       x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[
       7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10]))))-Z[17]*Z[18]*Z[23]*(Z[3]*(a4+Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*
       Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(d4*Z[15]+Z[15]*(d5*Z[12]+Z[8]*
       Z[13]*(a6+x*Z[6]-y*Z[7])+Z[12]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[13]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[4]*Z[16]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-
       Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[41] = -Z[21]*Z[31]*(Z[17]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*
       Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+
       y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(Z[4]*(a5+Z[5]*(a6+
       x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))))) - Z[30]*(Z[2]*Z[23]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[
       6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*
       Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+
       Z[17]*Z[23]*(Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*
       Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(
       Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*
       Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))))+Z[20]*(Z[14]*Z[19]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[
       6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[15]*Z[18]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*
       Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-
       Z[3]*Z[16]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[1]*Z[31]*(Z[2]*Z[20]*(Z[3]*(Z[11]*(a5+Z[5]*(a6+x*
       Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*
       Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10])))+Z[14]*Z[16]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[11]*(a5+Z[5]*(a6+x*Z[6]-y*
       Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-
       Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+
       Z[15]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*
       Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*
       Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[18]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*
       Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[23]*(Z[14]*Z[19]*(Z[11]*(a5+
       Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[
       7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[
       6]*Z[10])))-Z[15]*Z[18]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*
       Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[16]*Z[19]*(Z[4]*(a5+Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(
       d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*(Z[8]*Z[12]*(a6+x*Z[6]-y*Z[7])-d5*Z[13]-Z[13]*(d6*Z[10]+
       z*Z[10]+x*Z[7]*Z[9]+y*Z[6]*Z[9])-Z[5]*Z[12]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[42] = -Z[21]*Z[31]*(Z[17]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*
       Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(
       a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[
       5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[2]*(Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*
       Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[18]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[30]*(Z[2]*Z[23]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(
       d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[
       7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-
       Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[23]*(
       Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(
       Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*
       Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[
       8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[18]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*
       Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[20]*(
       Z[14]*Z[19]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(
       Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[18]*(Z[13]*Z[16]*(Z[5]*(a6+x*
       Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[
       8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-
       x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[19]*(Z[4]*Z[12]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*
       Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))) - Z[1]*
       Z[31]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+
       Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))+Z[14]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))+Z[19]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*
       Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[18]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+
       z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))+Z[11]*Z[12]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*
       Z[10]-y*Z[6]*Z[10])))-Z[18]*(Z[13]*Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*
       Z[10]))+Z[4]*Z[12]*Z[15]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*
       Z[15]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))-Z[3]*Z[19]*(Z[4]*Z[12]*
       Z[16]*(Z[5]*(a6+x*Z[6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[13]*Z[15]*(Z[5]*(a6+x*Z[
       6]-y*Z[7])+Z[8]*(d6*Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10]))-Z[11]*Z[16]*(Z[8]*(a6+x*Z[6]-y*Z[7])-Z[5]*(d6*
       Z[9]+z*Z[9]-x*Z[7]*Z[10]-y*Z[6]*Z[10])))));
   Z[43] = Z[21]*Z[31]*(Z[17]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*
       Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+
       Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))+Z[2]*(Z[19]*(
       Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*
       Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[6]-
       Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))) + Z[30]*(Z[2]*Z[23]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*
       Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*
       Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*
       Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))+Z[20]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*
       Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*
       Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*
       Z[10]*Z[12]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+
       Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[17]*Z[23]*(
       Z[19]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*
       Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[6]-Z[
       7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[
       5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[
       9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))) + Z[1]*Z[31]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[
       8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[
       7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-
       Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*
       Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(
       Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[
       7]*Z[10]*Z[12]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*
       Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12])))-Z[17]*
       Z[20]*(Z[19]*(Z[11]*Z[15]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])+Z[16]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*
       Z[10]*Z[13])-Z[4]*Z[15]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[14]*Z[18]*(Z[4]*(Z[5]*
       Z[6]-Z[7]*Z[8]*Z[10])+Z[11]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*
       Z[16]*(Z[5]*Z[6]-Z[7]*Z[8]*Z[10])-Z[15]*(Z[6]*Z[8]*Z[13]+Z[7]*Z[9]*Z[12]+Z[5]*Z[7]*Z[10]*Z[13])-Z[4]*
       Z[16]*(Z[7]*Z[9]*Z[13]-Z[6]*Z[8]*Z[12]-Z[5]*Z[7]*Z[10]*Z[12]))));
   Z[44] = -Z[21]*Z[31]*(Z[17]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[
       5]*Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))+Z[2]*(Z[19]*(
       Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[
       8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(Z[5]*Z[
       7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*
       Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))) - Z[30]*(Z[2]*Z[23]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*
       Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*
       Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*
       Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))+Z[20]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*
       Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(
       Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*
       Z[10]*Z[13]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))-Z[17]*Z[23]*(
       Z[19]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*
       Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(Z[4]*(Z[5]*Z[7]+
       Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*Z[18]*(Z[11]*Z[16]*(
       Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*
       Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))) - Z[1]*Z[31]*(Z[2]*Z[20]*(Z[3]*(Z[4]*(Z[5]*Z[7]+Z[6]*
       Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[14]*(Z[11]*Z[16]*(Z[5]*Z[7]+
       Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*
       Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13])))-Z[23]*(Z[14]*Z[19]*(Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-
       Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))+Z[18]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*
       Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))+Z[3]*Z[19]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*
       Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*
       Z[13])))-Z[17]*Z[20]*(Z[19]*(Z[11]*Z[15]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[15]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*
       Z[12]-Z[5]*Z[6]*Z[10]*Z[12])+Z[16]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))-Z[14]*Z[18]*(
       Z[4]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])-Z[11]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*Z[10]*Z[12]))-Z[3]*
       Z[18]*(Z[11]*Z[16]*(Z[5]*Z[7]+Z[6]*Z[8]*Z[10])+Z[4]*Z[16]*(Z[6]*Z[9]*Z[13]+Z[7]*Z[8]*Z[12]-Z[5]*Z[6]*
       Z[10]*Z[12])-Z[15]*(Z[7]*Z[8]*Z[13]-Z[6]*Z[9]*Z[12]-Z[5]*Z[6]*Z[10]*Z[13]))));
   Z[45] = Z[21]*Z[31]*(Z[17]*(Z[3]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*Z[9]*Z[11]*
       Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))-Z[2]*(Z[14]*Z[18]*(Z[
       4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[
       9]*Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*
       Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))) + Z[1]*Z[31]*(Z[2]*Z[20]*(Z[3]*(Z[4]*Z[8]*Z[
       9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*
       Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[17]*Z[20]*(Z[14]*Z[18]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+
       Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*
       Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(
       Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[23]*(Z[18]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*
       Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))-Z[14]*Z[19]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*
       Z[12]))-Z[3]*Z[19]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*
       Z[9]*Z[13])))) + Z[30]*(Z[2]*Z[23]*(Z[3]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[14]*(Z[8]*
       Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))+Z[17]*
       Z[23]*(Z[14]*Z[18]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))+Z[19]*(Z[4]*Z[15]*(Z[10]*Z[13]+Z[
       5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))+Z[3]*Z[18]*(Z[8]*Z[9]*Z[11]*
       Z[16]-Z[4]*Z[16]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13])))-Z[20]*(Z[18]*(Z[4]*
       Z[15]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[8]*Z[9]*Z[11]*Z[15]-Z[16]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))-Z[14]*
       Z[19]*(Z[4]*Z[8]*Z[9]+Z[11]*(Z[10]*Z[13]+Z[5]*Z[9]*Z[12]))-Z[3]*Z[19]*(Z[8]*Z[9]*Z[11]*Z[16]-Z[4]*Z[16]*(
       Z[10]*Z[13]+Z[5]*Z[9]*Z[12])-Z[15]*(Z[10]*Z[12]-Z[5]*Z[9]*Z[13]))));

   jaco<< Z[22],Z[24],Z[25],Z[26],Z[27],Z[28],Z[29],
	   Z[32],Z[33], Z[34], Z[35],Z[36], Z[37], Z[38],
	   Z[39], Z[40],Z[41],Z[42], Z[43], Z[44],Z[45];
   return jaco;
}

void UrRobot::UpdateJntHoldPos(VectorXd q)
{
	_hold_jpos = q;
}

VectorXd UrRobot::HoldJntPos()
{
	return _hold_jpos;
}

void UrRobot::UpdateTool(Vector3d tool_pos, Vector3d tool_rpy)
{
    RobotTools::Pose pose_tool;
    pose_tool.rot.setIdentity();
    pose_tool.rot = RotX(tool_rpy(0)) * RotY(tool_rpy(1)) * RotZ(tool_rpy(2));
    pose_tool.pos = tool_pos;

    _tool = pose_tool;
}

double UrRobot::GetToolLength()
{
	return _tool.pos.norm();
}

Vector6d UrRobot::CalcJacodot(Vector6d q, Vector6d qd)
{
	Vector3d z0(0, 0, 1);
	//reference:robotics toolbox
	vector<Matrix3d> Q(_nlinks);
	vector<Vector3d> a(_nlinks);
	for (int idx = 0; idx < _nlinks; idx++)
	{
		RobotTools::Pose pose_link = _links[idx].Transform(q(idx));
		Q[idx] = pose_link.rot;
		a[idx] = pose_link.pos;
	}
	vector<Matrix3d> P(_nlinks);
	vector<Vector3d> e(_nlinks);
	P[0] = Q[0];
	e[0] = z0;
	for (int idx = 1; idx < _nlinks; idx++)
	{
		P[idx] = P[idx - 1] * Q[idx];
		Vector3d tmp_e = P[idx].col(2);
		e[idx] = tmp_e;
	}

	vector<Vector3d> w(_nlinks);
	w[0] = qd(0)*e[0];
	for (int idx = 0; idx<_nlinks - 1; idx++)
		w[idx+1] = Q[idx].transpose()*w[idx] + qd(idx + 1)*z0;

	vector<Vector3d> ed(_nlinks);
	ed[0] = Vector3d(0, 0, 0);
	for (int idx = 1; idx<_nlinks; idx++)
		ed[idx] = w[idx].cross(e[idx]);

	vector<Vector3d> rd(_nlinks);
	rd[_nlinks-1] = w[_nlinks-1].cross(a[_nlinks-1]);
	for (int idx = _nlinks-2; idx>=0; idx--)
		rd[idx] = w[idx].cross(a[idx])+Q[idx]*rd[idx+1];

	vector<Vector3d> r(_nlinks);
	r[_nlinks-1] = a[_nlinks-1];
	for (int idx = _nlinks-2; idx>=0; idx--)
		r[idx] = a[idx]+Q[idx]*r[idx+1];

	vector<Vector3d> ud(_nlinks);
	ud[0] = e[0].cross(rd[0]);
	for (int idx = 1; idx<_nlinks; idx++)
		ud[idx] = ed[idx].cross(r[idx])+e[idx].cross(rd[idx]);

	vector<Vector6d> v(_nlinks);
	Vector3d v1_tmp = qd(_nlinks-1)*ud.back();
	Vector3d v2_tmp = qd(_nlinks-1)*ed.back();
	v.back()<<v1_tmp, v2_tmp;
	for (int idx = _nlinks-2; idx>=0; idx--)
	{
		Matrix<double, 6, 6> Ui;
		Ui.setZero();
		Ui.topLeftCorner(3, 3) = Q[idx];
		Ui.bottomRightCorner(3, 3) = Q[idx];
		v1_tmp = qd(idx)*ud[idx];
		v2_tmp = qd(idx)*ed[idx];
		Vector6d v_tmp;
		v_tmp<<v1_tmp, v2_tmp;
		v[idx] = v_tmp+Ui*v[idx+1];
	}

	return v[0];
}

Vector3i UrRobot::CalcConfig(VectorXd q)
{
	Vector3i config;
	Pose pose;
	pose = Transform(q, 0, 5);
	double shoulder;
	shoulder = -sin(q(0))*pose.pos(1) - cos(q(0))*pose.pos(0);
	if (shoulder < 0)
		config(0) = 0;
	else
		config(0) = 1;
	
	if (q(2)>-pi / 2)
		config(1) = 0;
	else
		config(1) = 1;

	if (q(4) > 0)
		config(2) = 1;
	else
		config(2) = 0;
	return config;
}